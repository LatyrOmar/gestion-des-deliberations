/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gestion.des.délibérations;
import java.sql.*;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;


public class AcceuilEnseignant extends javax.swing.JFrame {
String s;
PreparedStatement pst;

 ResultSet rs;
    
    /**
     * Creates new form AcceuilEnseignant
     */
   
   // valeur de la note de l'etudiant
 
    public AcceuilEnseignant() {
        initComponents();
        tableauNoteEtudiant();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
 
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        font = new javax.swing.JPanel();
        deconnexion = new javax.swing.JButton();
        modifierProfil = new javax.swing.JButton();
        gestionNotes = new javax.swing.JPanel();
        labelCredit = new javax.swing.JLabel();
        INE = new javax.swing.JLabel();
        textINE = new javax.swing.JTextField();
        devoir = new javax.swing.JLabel();
        supprimer = new javax.swing.JButton();
        modifier = new javax.swing.JButton();
        enregistrer = new javax.swing.JButton();
        titre = new javax.swing.JLabel();
        tableauInfoEtu = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        examen = new javax.swing.JLabel();
        jSpinnerExam = new javax.swing.JSpinner();
        jSpinnerDevoir = new javax.swing.JSpinner();
        textMatiere = new javax.swing.JTextField();
        labelMatiere1 = new javax.swing.JLabel();
        jSpinnerCredit = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(100, 20));

        font.setBackground(new java.awt.Color(119, 181, 254));
        font.setLayout(null);

        deconnexion.setBackground(new java.awt.Color(0, 153, 153));
        deconnexion.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        deconnexion.setForeground(new java.awt.Color(255, 255, 255));
        deconnexion.setText("DECONNEXION");
        deconnexion.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 3, true));
        deconnexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deconnexionActionPerformed(evt);
            }
        });
        font.add(deconnexion);
        deconnexion.setBounds(0, 420, 160, 40);

        modifierProfil.setBackground(new java.awt.Color(0, 153, 153));
        modifierProfil.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        modifierProfil.setForeground(new java.awt.Color(255, 255, 255));
        modifierProfil.setText("MODIFIER-PROFIL");
        modifierProfil.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 3, true));
        modifierProfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierProfilActionPerformed(evt);
            }
        });
        font.add(modifierProfil);
        modifierProfil.setBounds(0, 150, 160, 40);

        gestionNotes.setBackground(new java.awt.Color(0, 153, 153));
        gestionNotes.setLayout(null);

        labelCredit.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        labelCredit.setForeground(new java.awt.Color(255, 255, 255));
        labelCredit.setText("CREDIT:");
        gestionNotes.add(labelCredit);
        labelCredit.setBounds(220, 240, 60, 30);

        INE.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        INE.setForeground(new java.awt.Color(255, 255, 255));
        INE.setText("INE:");
        gestionNotes.add(INE);
        INE.setBounds(240, 80, 80, 30);

        textINE.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        textINE.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 2, true));
        gestionNotes.add(textINE);
        textINE.setBounds(290, 80, 170, 30);

        devoir.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        devoir.setForeground(new java.awt.Color(255, 255, 255));
        devoir.setText("DEVOIR:");
        gestionNotes.add(devoir);
        devoir.setBounds(220, 120, 70, 30);

        supprimer.setBackground(new java.awt.Color(119, 181, 254));
        supprimer.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        supprimer.setText("SUPPRIMER");
        supprimer.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        supprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerActionPerformed(evt);
            }
        });
        gestionNotes.add(supprimer);
        supprimer.setBounds(490, 310, 130, 30);

        modifier.setBackground(new java.awt.Color(119, 181, 254));
        modifier.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        modifier.setText("MODIFIER");
        modifier.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        modifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierActionPerformed(evt);
            }
        });
        gestionNotes.add(modifier);
        modifier.setBounds(330, 310, 130, 30);

        enregistrer.setBackground(new java.awt.Color(119, 181, 254));
        enregistrer.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        enregistrer.setText("ENREGISTRER");
        enregistrer.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        enregistrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enregistrerActionPerformed(evt);
            }
        });
        gestionNotes.add(enregistrer);
        enregistrer.setBounds(180, 310, 130, 30);

        titre.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        titre.setForeground(new java.awt.Color(255, 255, 255));
        titre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titre.setText("GESTION DES NOTES");
        titre.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 4, true));
        gestionNotes.add(titre);
        titre.setBounds(290, 10, 460, 60);

        jTable1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        tableauInfoEtu.setViewportView(jTable1);

        gestionNotes.add(tableauInfoEtu);
        tableauInfoEtu.setBounds(20, 400, 950, 230);

        examen.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        examen.setForeground(new java.awt.Color(255, 255, 255));
        examen.setText("EXAMEN:");
        gestionNotes.add(examen);
        examen.setBounds(220, 160, 70, 30);

        jSpinnerExam.setModel(new javax.swing.SpinnerNumberModel(0, 0, 20, 1));
        jSpinnerExam.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 2, true));
        gestionNotes.add(jSpinnerExam);
        jSpinnerExam.setBounds(290, 160, 170, 30);

        jSpinnerDevoir.setModel(new javax.swing.SpinnerNumberModel(0, 0, 20, 1));
        jSpinnerDevoir.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 2, true));
        gestionNotes.add(jSpinnerDevoir);
        jSpinnerDevoir.setBounds(290, 120, 170, 30);

        textMatiere.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        textMatiere.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 2, true));
        textMatiere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textMatiereActionPerformed(evt);
            }
        });
        gestionNotes.add(textMatiere);
        textMatiere.setBounds(290, 200, 170, 30);

        labelMatiere1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        labelMatiere1.setForeground(new java.awt.Color(255, 255, 255));
        labelMatiere1.setText("CODE MATIERE:");
        gestionNotes.add(labelMatiere1);
        labelMatiere1.setBounds(170, 200, 110, 30);

        jSpinnerCredit.setModel(new javax.swing.SpinnerNumberModel(0, 0, 8, 1));
        jSpinnerCredit.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 2, true));
        gestionNotes.add(jSpinnerCredit);
        jSpinnerCredit.setBounds(290, 240, 170, 30);

        font.add(gestionNotes);
        gestionNotes.setBounds(190, 0, 1060, 830);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(font, javax.swing.GroupLayout.PREFERRED_SIZE, 1214, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(font, javax.swing.GroupLayout.DEFAULT_SIZE, 670, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 
    private void deconnexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deconnexionActionPerformed
        // TODO add your handling code here:
         connectionProffesseur connectProf = new connectionProffesseur();
         connectProf.setVisible(true);
         setVisible(false);
    }//GEN-LAST:event_deconnexionActionPerformed

    private void modifierProfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifierProfilActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        modifierPhoto modif= new modifierPhoto();
        modif.setVisible(true);
    }//GEN-LAST:event_modifierProfilActionPerformed

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        // TODO add your handling code here:
        //   Date date = (Date) dateDeNaissance.getDate();
        int selectionner= jTable1.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        textINE.setText(model.getValueAt(selectionner, 0).toString());
        textMatiere.setText(model.getValueAt(selectionner, 1).toString());
        //  dateDeNaissance.setText(model.getValueAt(selectionner, 2).toString());

    }//GEN-LAST:event_jTable1MouseReleased

    private void enregistrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enregistrerActionPerformed
        // TODO add your handling code here:
        //Date date = (Date) dateDeNaissance.getDate();
        String s="";
        int devoir1 = (int) jSpinnerDevoir.getValue();
        int examen1 = (int) jSpinnerExam.getValue();
        devoir1 = (devoir1*40)/100;
        examen1= (examen1*60)/100;
        int note = (devoir1+examen1);
         int credit = (int) jSpinnerCredit.getValue();
        connexion conn = new connexion();
        try{

            pst = conn.con.prepareStatement("insert into notes(note,INEETU,codeMat,credit)values(?,?,?,?)");
            pst.setInt(1,note);
            pst.setString(2,textINE.getText());
            pst.setString(3,textMatiere.getText());
            pst.setInt(4,credit);
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "note ajoute!");
            tableauNoteEtudiant();
            pst.close();
            textINE.setText(s);
            textMatiere.setText(s);
        }
        catch(Exception e){
          JOptionPane.showMessageDialog(null,"ECHEC!",null,JOptionPane.ERROR_MESSAGE);
          e.printStackTrace();
        }

    }//GEN-LAST:event_enregistrerActionPerformed

    private void modifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifierActionPerformed
        // TODO add your handling code here:
        connexion connect = new connexion();
         int devoir1 = (int) jSpinnerDevoir.getValue();
        int examen1 = (int) jSpinnerExam.getValue();
        devoir1 = (devoir1*40)/100;
        examen1= (examen1*60)/100;
        int note = (devoir1+examen1);
        int credit = (int) jSpinnerCredit.getValue();
       
        
        try{
           pst = connect.con.prepareStatement("UPDATE notes  SET note =?,credit=? WHERE codeMat = ?");
          // pst1 = connect.con.prepareStatement("UPDATE notes n SET n.credit =? WHERE  n.codeMat =? ");
            pst.setString(3,textMatiere.getText());
            pst.setInt(1,note);
            pst.setInt(2,credit);
          //  pst1.setString(2,textMatiere.getText());
           // pst1.setInt(1,credit);
            
           
           
            //     pst.setInt(6,note);
            pst.executeUpdate();
            pst.close();

            JOptionPane.showMessageDialog(null, "note modifier!");
            tableauNoteEtudiant();
        }catch(Exception e){
            e.printStackTrace();
        }

    }//GEN-LAST:event_modifierActionPerformed

    private void supprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerActionPerformed
        // TODO add your handling code here:
        String s="";
        int option= JOptionPane.showConfirmDialog(null, "voulez vous supprimer la note","supression",JOptionPane.YES_NO_OPTION);
        connexion conn = new connexion();
        if(option==0){
            try{
                pst = conn.con.prepareStatement("delete from notes where INEETU=?");
                pst.setString(1,textINE.getText());
                pst.executeUpdate();
                pst.close();
                tableauNoteEtudiant();
                JOptionPane.showMessageDialog(this, " note suprimer!");
                textINE.setText(s);
                textMatiere.setText(s);
            }catch(Exception e){
                JOptionPane.showMessageDialog(null,"ECHEC!",null,JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_supprimerActionPerformed

    private void textMatiereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textMatiereActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textMatiereActionPerformed
//public ImageIcon ResizeImage(String imPath){
//		ImageIcon myImage=new ImageIcon(imPath);
//		Image img=myImage.getImage();
//		Image  newImage=img.getScaledInstance(photo.getWidth(),photo.getHeight(),Image.SCALE_SMOOTH);
//		ImageIcon image=new ImageIcon(newImage);
//		return image;	
//	}


   // tableau note Etudiants
    private void tableauNoteEtudiant(){
        connexion connect = new connexion();
        String colonne[] ={"INE","PRENOM","NOM","dateNaissance","NOTE","CREDIT","MATIERE"};
        DefaultTableModel model = new DefaultTableModel(null,colonne) ;
        PreparedStatement st ;
        ResultSet RS;
        try{
            st = connect.con.prepareStatement("SELECT etudiant.prenomEtu, etudiant.nomEtu, etudiant.dateNaiss, notes.note,notes.credit, notes.INEETU, matiere.nomMat FROM etudiant INNER JOIN notes ON etudiant.INE = notes.INEETU INNER JOIN matiere ON notes.codeMat = matiere.codeMat");
            RS= st.executeQuery();
            
           while(RS.next()){
               Object o[]= {
                   RS.getString("INEETU"),
                   RS.getString("prenomEtu"),
                   RS.getString("nomEtu"),
                   RS.getString("dateNaiss"),
                   RS.getString("note"),
                   RS.getString("credit"),
                   RS.getString("nomMat"),
                //RS.getInt("note")
               };
                model.addRow(o);
           };
          
           jTable1.setModel(model);
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
//       //affichage des informations de l'enseignant
//       String matricule;
//       String prenom;
//       String nom;
//       try{
//       PreparedStatement pst1;
//       ResultSet rs1;
//        connexion conect = new connexion();//  connection a la base de donnee
//        pst1 = conect.con.prepareStatement("select * from enseignant");
//        rs1=pst1.executeQuery();
//        while(rs1.next()){
//            
//             matricule = rs1.getString("matriculeEns");
//            prenom = rs1.getString("PrenomEns");
//             nom = rs1.getString("nomEns");
//            System.out.print(nom);
//         // prenom.setText(prenom);
//
//        }
//       }
//       catch(Exception e){
//            e.printStackTrace();
//        }
//       //  Matricule.setText(matricule);
//       
       
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AcceuilEnseignant().setVisible(true);
            }
        });
    }

    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel INE;
    private javax.swing.JButton deconnexion;
    private javax.swing.JLabel devoir;
    private javax.swing.JButton enregistrer;
    private javax.swing.JLabel examen;
    private javax.swing.JPanel font;
    private javax.swing.JPanel gestionNotes;
    private javax.swing.JSpinner jSpinnerCredit;
    private javax.swing.JSpinner jSpinnerDevoir;
    private javax.swing.JSpinner jSpinnerExam;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel labelCredit;
    private javax.swing.JLabel labelMatiere1;
    private javax.swing.JButton modifier;
    private javax.swing.JButton modifierProfil;
    private javax.swing.JButton supprimer;
    private javax.swing.JScrollPane tableauInfoEtu;
    private javax.swing.JTextField textINE;
    private javax.swing.JTextField textMatiere;
    private javax.swing.JLabel titre;
    // End of variables declaration//GEN-END:variables

    private void Tablerecherche(String text) {
      connexion connect = new connexion();
        String colonne[] ={"INE","PRENOM","NOM","dateNaissance","NOTE","MATIERE"};
        DefaultTableModel model = new DefaultTableModel(null,colonne) ;
        PreparedStatement st ;
        ResultSet RS;
        try{
            st = connect.con.prepareStatement("SELECT etudiant.prenomEtu, etudiant.nomEtu, etudiant.dateNaiss, notes.note, notes.INEETU, matiere.nomMat FROM etudiant INNER JOIN notes ON etudiant.INE = notes.INEETU INNER JOIN matiere ON notes.codeMat = matiere.codeMat where INEETU like'%"+text+"%'");
            RS= st.executeQuery();
            
           while(RS.next()){
               Object o[]= {
                   RS.getString("INEETU"),
                   RS.getString("prenomEtu"),
                   RS.getString("nomEtu"),
                   RS.getString("dateNaiss"),
                   RS.getString("note"),
                   RS.getString("nomMat"),
                //RS.getInt("note")
               };
                model.addRow(o);
           };
          
           jTable1.setModel(model);
        }catch(Exception e){
            e.printStackTrace();
        }
        
    }

    
}
